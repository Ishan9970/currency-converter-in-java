Currency Converter

Project Overview
This Currency Converter application allows users to convert amounts between specific currencies. 
However, it's essential to note that this converter supports a predefined set of currencies, including the United States Dollar (USD), 
Kuwaiti Dinar (KWD), Baharaini Dinar (BHD), Swiss Franc (CHF), Australian Dollar (AUD), and Indian Rupee (INR). 
If you need to convert other currencies, you may need to explore additional tools or APIs.

How It Works

1.User Input: Users enter the amount they want to convert, select the source currency (from), and choose the target currency (to).
2.Conversion Logic: The application uses predefined conversion rates to calculate the converted amount. For example:
   - USD to KWD: Multiply the amount by 0.31.
   - KWD to USD: Multiply the amount by 3.27.
   - And so on for other currency pairs.
3.Validation: The application checks for valid input (numeric values) and displays an error message if the user enters invalid data.
4.Reset and Exit: Users can reset the form or exit the application as needed.

How I Built This Project

-Java Swing: I used Java Swing to create the graphical user interface (GUI) for this application. Swing provides components like buttons, 
text fields, and combo boxes, allowing users to interact with the program.

-Conversion Logic: I implemented the conversion logic based on predefined exchange rates. Each currency pair has a specific conversion 
factor, which I applied to the user's input.

-Error Handling: To ensure a smooth user experience, I added error handling for invalid input (e.g., non-numeric characters).

-User Experience: The application provides a clear interface for users to input data, view the converted amount, 
and reset or exit the program.

Limitations

-Supported Currencies: As mentioned earlier, this converter only supports specific currencies. If you need additional currency pairs, 
consider exploring other tools or APIs.

-Exchange Rates: The exchange rates used are predefined and may not reflect real-time market rates. Users should verify the accuracy 
of the rates for their specific use case.


Feel free to explore the code and contribute to this project! If you have any questions or feedback, don't hesitate to reach out. 
Thank you for using this Currency Converter!

